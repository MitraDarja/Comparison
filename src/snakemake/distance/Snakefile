rule all:
    input:
        # Representative
        ["0_minimiser_hash_20_"+str(w)+"_GRCh38.p13.genome.fa_distances.out" for w in range(24,44,4)],
        ["0_modmer_hash_20_"+str(w)+"_GRCh38.p13.genome.fa_distances.out" for w in [3,5,7,9,11]],
        ["syncmer_hash_20_"+str(w)+"_0_0_GRCh38.p13.genome.fa_distances.out" for w in [18,16,14,12,10]],
        ["syncmer_hash_20_"+str(w)+"_0_"+str(20-w)+"_GRCh38.p13.genome.fa_distances.out" for w in [15,11,7,3,1]],
        # Representative based on strobemers
        ["hybridstrobemers_2_"+str(1)+"_"+str(4+k)+"_Strobemer_minimiser_hash_10_"+str(w)+"_GRCh38.p13.genome.fa_distances.out" for k in [10] for w in range(24,44,4)],
        ["minstrobemers_2_"+str(1)+"_"+str(4+k)+"_Strobemer_minimiser_hash_10_"+str(w)+"_GRCh38.p13.genome.fa_distances.out" for k in [10] for w in range(24,44,4)],
        ["randstrobemers_2_"+str(1)+"_"+str(4+k)+"_Strobemer_minimiser_hash_10_"+str(w)+"_GRCh38.p13.genome.fa_distances.out" for k in [10] for w in range(24,44,4)],
        ["hybridstrobemers_2_"+str(1)+"_"+str(8+k)+"_Strobemer_minimiser_hash_10_"+str(w)+"_GRCh38.p13.genome.fa_distances.out" for k in [10] for w in range(24,44,4)],
        ["minstrobemers_2_"+str(1)+"_"+str(8+k)+"_Strobemer_minimiser_hash_10_"+str(w)+"_GRCh38.p13.genome.fa_distances.out" for k in [10] for w in range(24,44,4)],
        ["randstrobemers_2_"+str(1)+"_"+str(8+k)+"_Strobemer_minimiser_hash_10_"+str(w)+"_GRCh38.p13.genome.fa_distances.out" for k in [10] for w in range(24,44,4)],
        ["hybridstrobemers_2_"+str(1)+"_"+str(4+k)+"_Strobemer_modmer_hash_10_"+str(w)+"_GRCh38.p13.genome.fa_distances.out" for k in [10] for w in [3,5,7,9,11]],
        ["minstrobemers_2_"+str(1)+"_"+str(4+k)+"_Strobemer_modmer_hash_10_"+str(w)+"_GRCh38.p13.genome.fa_distances.out" for k in [10] for w in [3,5,7,9,11]],
        ["randstrobemers_2_"+str(1)+"_"+str(4+k)+"_Strobemer_modmer_hash_10_"+str(w)+"_GRCh38.p13.genome.fa_distances.out" for k in [10] for w in [3,5,7,9,11]],
        ["hybridstrobemers_2_"+str(1)+"_"+str(8+k)+"_Strobemer_modmer_hash_10_"+str(w)+"_GRCh38.p13.genome.fa_distances.out" for k in [10] for w in [3,5,7,9,11]],
        ["minstrobemers_2_"+str(1)+"_"+str(8+k)+"_Strobemer_modmer_hash_10_"+str(w)+"_GRCh38.p13.genome.fa_distances.out" for k in [10] for w in [3,5,7,9,11]],
        ["randstrobemers_2_"+str(1)+"_"+str(8+k)+"_Strobemer_modmer_hash_10_"+str(w)+"_GRCh38.p13.genome.fa_distances.out" for k in [10] for w in [3,5,7,9,11]],
        ["hybridstrobemers_2_"+str(1)+"_"+str(4+k)+"_Strobemer_syncmer_hash_10_"+str(w)+"_0_0_GRCh38.p13.genome.fa_distances.out" for k in [10] for w in [18,16,14,12,10]],
        ["minstrobemers_2_"+str(1)+"_"+str(4+k)+"_Strobemer_syncmer_hash_10_"+str(w)+"_0_0_GRCh38.p13.genome.fa_distances.out" for k in [10] for w in [18,16,14,12,10]],
        ["randstrobemers_2_"+str(1)+"_"+str(4+k)+"_Strobemer_syncmer_hash_10_"+str(w)+"_0_0_GRCh38.p13.genome.fa_distances.out" for k in [10] for w in [18,16,14,12,10]],
        ["hybridstrobemers_2_"+str(1)+"_"+str(8+k)+"_Strobemer_syncmer_hash_10_"+str(w)+"_0_0_GRCh38.p13.genome.fa_distances.out" for k in [10] for w in [18,16,14,12,10]],
        ["minstrobemers_2_"+str(1)+"_"+str(8+k)+"_Strobemer_syncmer_hash_10_"+str(w)+"_0_0_GRCh38.p13.genome.fa_distances.out" for k in [10] for w in [18,16,14,12,10]],
        ["randstrobemers_2_"+str(1)+"_"+str(8+k)+"_Strobemer_syncmer_hash_10_"+str(w)+"_0_0_GRCh38.p13.genome.fa_distances.out" for k in [10] for w in [18,16,14,12,10]],
        ["hybridstrobemers_2_"+str(1)+"_"+str(4+k)+"_Strobemer_syncmer_hash_10_"+str(w)+"_0_"+str(20-w)+"_GRCh38.p13.genome.fa_distances.out" for k in [10] for w in [15,11,7,3,1]],
        ["minstrobemers_2_"+str(1)+"_"+str(4+k)+"_Strobemer_syncmer_hash_10_"+str(w)+"_0_"+str(20-w)+"_GRCh38.p13.genome.fa_distances.out" for k in [10] for w in [15,11,7,3,1]],
        ["randstrobemers_2_"+str(1)+"_"+str(4+k)+"_Strobemer_syncmer_hash_10_"+str(w)+"_0_"+str(20-w)+"_GRCh38.p13.genome.fa_distances.out" for k in [10] for w in [15,11,7,3,1]],
        ["hybridstrobemers_2_"+str(1)+"_"+str(8+k)+"_Strobemer_syncmer_hash_10_"+str(w)+"_0_"+str(20-w)+"_GRCh38.p13.genome.fa_distances.out" for k in [10] for w in [15,11,7,3,1]],
        ["minstrobemers_2_"+str(1)+"_"+str(8+k)+"_Strobemer_syncmer_hash_10_"+str(w)+"_0_"+str(20-w)+"_GRCh38.p13.genome.fa_distances.out" for k in [10] for w in [15,11,7,3,1]],
        ["randstrobemers_2_"+str(1)+"_"+str(8+k)+"_Strobemer_syncmer_hash_10_"+str(w)+"_0_"+str(20-w)+"_GRCh38.p13.genome.fa_distances.out" for k in [10] for w in [15,11,7,3,1]]

rule download_human_genome:
    output:
        "../results/GRCh38.p13.genome.fa.gz"
    shell:
        """wget "https://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_human/release_40/GRCh38.p13.genome.fa.gz"  -O "../results/GRCh38.p13.genome.fa.gz" """

rule distance_minimiser_modmer:
    input:
        "../results/GRCh38.p13.genome.fa.gz"
    output:
        "{shape}_{method}_hash_{kmer_size}_{w_size}_GRCh38.p13.genome.fa_distances.out"
    wildcard_constraints:
         shape='[0-9]*',
         method='(modmer|minimiser)'
    shell:
        "minions distance --method {wildcards.method} -k {wildcards.kmer_size} -w {wildcards.w_size} --shape {wildcards.shape} -o {wildcards.shape}_  {input}"

rule distance_syncmer:
    input:
        "../results/GRCh38.p13.genome.fa.gz"
    output:
        "syncmer_hash_{kmer_size}_{w_size}_{pos_begin}_{pos_end}_GRCh38.p13.genome.fa_distances.out",
    shell:
        "minions distance --method syncmer -k {wildcards.kmer_size} -w {wildcards.w_size} -p {wildcards.pos_begin} -p {wildcards.pos_end} --shape 0 {input}"

rule distance_strobemer:
    input:
        "../results/GRCh38.p13.genome.fa.gz"
    output:
        "{method}strobemers_{kmer_size}_{order}_{wmin}_{wmax}_GRCh38.p13.genome.fa_distances.out"
    wildcard_constraints:
         method='(min|rand|hybrid)',
         kmer_size='[0-9]*',
         order='(2|3)',
         wmin='[0-9]*',
         wmax='[0-9]*'
    shell:
        "minions distance --method strobemer --{wildcards.method} -k {wildcards.kmer_size} --w-min {wildcards.wmin} --w-max {wildcards.wmax} --order {wildcards.order} {input}"

rule distance_minimiser_modmer_strobemer:
    input:
        "../results/GRCh38.p13.genome.fa.gz"
    output:
        "{method2}strobemers_{order}_{wmin}_{wmax}_Strobemer_{method}_hash_{kmer_size}_{w_size}_GRCh38.p13.genome.fa_distances.out"
    wildcard_constraints:
         method='(modmer|minimiser)',
         method2='(min|rand|hybrid)',
         order='(2|3)',
         kmer_size='[0-9]*',
         w_size='[0-9]*',
         wmin='[0-9]*',
         wmax='[0-9]*'
    shell:
        "minions distance --method {wildcards.method} -k {wildcards.kmer_size} -w {wildcards.w_size} --strobemer --w-min {wildcards.wmin} --w-max {wildcards.wmax} --{wildcards.method2} --order {wildcards.order} -o {wildcards.method2}strobemers_{wildcards.order}_{wildcards.wmin}_{wildcards.wmax}_ {input}"

rule distance_syncmer_strobemer:
    input:
        "../results/GRCh38.p13.genome.fa.gz"
    output:
        "{method2}strobemers_{order}_{wmin}_{wmax}_Strobemer_{method}_hash_{kmer_size}_{w_size}_{pos_begin}_{pos_end}_GRCh38.p13.genome.fa_distances.out"
    wildcard_constraints:
         method='(syncmer)',
         method2='(min|rand|hybrid)',
         order='(2|3)',
         kmer_size='[0-9]*',
         w_size='[0-9]*',
         wmin='[0-9]*',
         wmax='[0-9]*'
    shell:
        "minions distance --method {wildcards.method} -k {wildcards.kmer_size} -w {wildcards.w_size} --strobemer --w-min {wildcards.wmin} --w-max {wildcards.wmax} --{wildcards.method2} --order {wildcards.order} -p {wildcards.pos_begin} -p {wildcards.pos_end} -o {wildcards.method2}strobemers_{wildcards.order}_{wildcards.wmin}_{wildcards.wmax}_ {input}"
